<Window x:Class="LivetApp1.Views.MessageView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:LivetApp1.Views"
        xmlns:vm="clr-namespace:LivetApp1.ViewModels"
        Title="メッセージ画面（一般向け）" Height="390" Width="525">

    <Window.DataContext>
        <vm:MessageViewForAdminViewModel/>
    </Window.DataContext>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->
        <l:InteractionMessageTrigger MessageKey="Close" Messenger="{Binding Messenger}">
            <l:WindowInteractionMessageAction/>
        </l:InteractionMessageTrigger>


    </i:Interaction.Triggers>

    <Canvas>
        <Label Content="From"  Canvas.Left="75" Canvas.Top="35" />
        <Label Content="To" Canvas.Left="90" Canvas.Top="61"/>
        <Label Content="タイトル" Canvas.Left="66" Canvas.Top="87"/>
        <Label Content="本文：" Canvas.Left="42" Canvas.Top="118"/>

        <TextBox IsReadOnly="True" IsEnabled="True" Height="23" Canvas.Left="112" TextWrapping="Wrap" Text="{Binding thanksCard.From.Name}" Canvas.Top="38" Width="120"/>
        <TextBox IsReadOnly="True" IsEnabled="True" Height="23" Canvas.Left="112" TextWrapping="Wrap" Text="{Binding thanksCard.From.Name}" Canvas.Top="38" Width="120"/>
        <TextBox IsReadOnly="True" IsEnabled="True" Height="23" Canvas.Left="112" TextWrapping="Wrap" Text="{Binding thanksCard.To.Name}" Canvas.Top="64" Width="120"/>
        <TextBox IsReadOnly="True" IsEnabled="True" Height="23" Canvas.Left="112" TextWrapping="Wrap" Text="{Binding thanksCard.From.Name}" Canvas.Top="38" Width="120"/>
        <TextBox  IsReadOnly="True" IsEnabled="True" Height="23" Canvas.Left="112" TextWrapping="Wrap" Text="{Binding thanksCard.Title}" Canvas.Top="90" Width="120"/>
        <TextBox  IsReadOnly="True" IsEnabled="True" Height="128" Canvas.Left="42" TextWrapping="Wrap" Text="{Binding thanksCard.Body}" Canvas.Top="144" Width="443"/>
        <CheckBox Content="既読" Canvas.Left="219" Canvas.Top="290" IsChecked="{Binding thanksCard.IsReaded}" /> 
        <Button Content="閉じる" Canvas.Left="410" Canvas.Top="329" Width="75" Command="{Binding CloseCommand}"  />
        <Canvas.Background>
            <ImageBrush ImageSource="../Resources/11happa_green_honbun.jpg"/>
        </Canvas.Background>
        
    </Canvas>
</Window>
