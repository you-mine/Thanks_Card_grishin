<Window x:Class="LivetApp1.Views.CreateCard"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:LivetApp1.Views"
        xmlns:vm="clr-namespace:LivetApp1.ViewModels"
        Title="カード作成画面" Height="350" Width="730">

    <Window.DataContext>
        <vm:CreateCardViewModel/>
    </Window.DataContext>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->
        <l:InteractionMessageTrigger MessageKey="Authorized" Messenger="{Binding Messenger}">
            <l:WindowInteractionMessageAction/>

        </l:InteractionMessageTrigger>
    </i:Interaction.Triggers>

    <Grid>

        <TextBox HorizontalAlignment="Center" Height="20" TextWrapping="Wrap" Text="{Binding ThanksCard.Title}" VerticalAlignment="Top" Width="174" Margin="105,38,443,0"/>
        <TextBox HorizontalAlignment="Center" Height="140" TextWrapping="Wrap" Text="{Binding ThanksCard.Body}" VerticalAlignment="Top" Width="255" Margin="45,110,422,0"/>
        <TextBlock HorizontalAlignment="Left" Height="20" Margin="30,90,0,0" TextWrapping="Wrap" Text="メッセージ" VerticalAlignment="Top" Width="55"/>
        <TextBlock HorizontalAlignment="Left" Height="18" Margin="45,15,0,0" TextWrapping="Wrap" Text="感謝カード" VerticalAlignment="Top" Width="255" Background="Aqua"/>
        <Button Content="閉じる" HorizontalAlignment="Left" VerticalAlignment="Top" Width="55" Margin="637,299,0,0" Click="Button_Click" Command="{Binding CloseCommand}"/>
        <Button Content="送信" HorizontalAlignment="Left" VerticalAlignment="Top" Width="55" Margin="575,299,0,0" Command="{Binding SendCommand}"/>
        <TextBox HorizontalAlignment="Left" Height="20" Margin="54,38,0,0" TextWrapping="Wrap" Text="タイトル" VerticalAlignment="Top" Width="46" TextChanged="TextBox_TextChanged"/>
        <Label Content="誰に送りますか？" HorizontalAlignment="Left" Height="25" Margin="360,38,0,0" VerticalAlignment="Top" Width="180"/>
        <Label Content="From/" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="30,270,0,0" />
        <Label Content="{Binding ThanksCard.From}" HorizontalAlignment="Left" Margin="125,270,0,0" VerticalAlignment="Top"/>

        <DataGrid ItemsSource="{Binding Users}" AutoGenerateColumns="False" CanUserAddRows="False" Margin="360,70,10,44"
            Height="232" VerticalAlignment="Top" SelectionChanged="DataGrid_SelectionChanged" HorizontalAlignment="Left" Width="322">
            <DataGrid.Columns>

                <DataGridTextColumn Header="氏名" Binding="{Binding Name}" />
                <DataGridTextColumn Header="部署" Binding="{Binding Department.DepartmentName}" />
                <DataGridTextColumn Header="課" Binding="{Binding Department.SectionName}"/>

                <DataGridTemplateColumn Header="">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content="選択" Command="{Binding DataContext.UserDeleteCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}" CommandParameter="{Binding}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

    </Grid>

</Window>
