<Window x:Class="LivetApp1.Views.CreateCard2"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:LivetApp1.Views"
        xmlns:vm="clr-namespace:LivetApp1.ViewModels"
        Title="カード作成（簡易）" Height="380" Width="745" ResizeMode="NoResize"  WindowStartupLocation="CenterScreen" >

    <Window.DataContext>
        <vm:CreateCard2ViewModel/>
    </Window.DataContext>

    <i:Interaction.Triggers>

        <l:InteractionMessageTrigger MessageKey="Authorized" Messenger="{Binding Messenger}">
            <l:WindowInteractionMessageAction/>
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger MessageKey="Close" Messenger="{Binding Messenger}">
            <l:WindowInteractionMessageAction/>
        </l:InteractionMessageTrigger>
        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

    </i:Interaction.Triggers>

    <Grid Margin="0,0,-8,0" Height="349" VerticalAlignment="Top">
        <Grid.Background>
            <ImageBrush ImageSource="../Resources/_6529-19.jpg"/>
        </Grid.Background>


        <TextBox HorizontalAlignment="Left" Text="{Binding ThanksCard.Title}" Height="23" Margin="91,57,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="177"/>
        <Label Content="タイトル" HorizontalAlignment="Left" Margin="29,57,0,0" VerticalAlignment="Top"/>
        <Label Content="場所" HorizontalAlignment="Left" Margin="29,104,0,0" VerticalAlignment="Top"/>
        <Label Content="内容" HorizontalAlignment="Left" Margin="29,145,0,0" VerticalAlignment="Top"/>
        <Label Content="内容2" HorizontalAlignment="Left" Margin="29,192,0,0" VerticalAlignment="Top"/>
        <Label Content="From/" HorizontalAlignment="Left" Margin="34,259,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.55,1.962" FontSize="14" Width="140" Height="28">
            <Label.Background>
                <SolidColorBrush Color="{DynamicResource DG_Color_MouseOver}"/>
            </Label.Background>

        </Label>

        <ComboBox ItemsSource="{Binding Place}" DisplayMemberPath="content" SelectedValuePath="content" SelectedValue="{Binding Message1}" HorizontalAlignment="Left" Margin="91,108,0,0" VerticalAlignment="Top" Width="120" />
        <ComboBox ItemsSource="{Binding Help1}" DisplayMemberPath="content" SelectedValuePath="content" SelectedValue="{Binding Message2}" HorizontalAlignment="Left" Margin="91,149,0,0" VerticalAlignment="Top" Width="120" />
        <ComboBox ItemsSource="{Binding Help2}" DisplayMemberPath="content" SelectedValuePath="content" SelectedValue="{Binding Message3}" HorizontalAlignment="Left" Margin="91,192,0,0" VerticalAlignment="Top" Width="120" />

        <Label Content="{Binding ThanksCard.From.Name}"  Margin="80,259,571,62" Background="{x:Null}"/>
        <Label Content="をしてくれてありがとうございました。" HorizontalAlignment="Left" Margin="132,219,0,0" VerticalAlignment="Top" Width="167"/>
        <DataGrid IsReadOnly="True"  ItemsSource="{Binding Users}" AutoGenerateColumns="False" CanUserAddRows="False" Margin="386,62,0,80"  HorizontalAlignment="Left" Width="301" SelectionChanged="DataGrid_SelectionChanged">
            <DataGrid.Columns>

                <DataGridTextColumn Header="氏名" Binding="{Binding Name}" />
                <DataGridTextColumn Header="部署" Binding="{Binding Department.DepartmentName}" />
                <DataGridTextColumn Header="課" Binding="{Binding Department.SectionName}"/>


                <DataGridTemplateColumn Header="">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button VerticalAlignment="Center" Content="選択" Command="{Binding DataContext.SelectCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}" CommandParameter="{Binding}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>


        <Button Content="閉じる" HorizontalAlignment="Left" Margin="612,294,0,0" VerticalAlignment="Top" Width="75" Command="{Binding CloseCommand}" Click="Button_Click" RenderTransformOrigin="0.6,0.344" />
        <Button Content="送信" HorizontalAlignment="Left" Margin="515,294,0,0" VerticalAlignment="Top" Width="75"  Command="{Binding SendCommand}" RenderTransformOrigin="0.6,0.219" Click="Button_Click_1"/>
        <Label Content="で" HorizontalAlignment="Left" Margin="211,127,0,0" VerticalAlignment="Top" Width="27"/>
        <Label Content="の" HorizontalAlignment="Left" Margin="211,174,0,0" VerticalAlignment="Top" Width="32"/>



    </Grid>
</Window>
